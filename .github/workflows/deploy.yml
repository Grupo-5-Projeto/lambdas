name: Deploy Lambdas
on:
  push:
    branches: 
     - main
  workflow_call:

jobs:      
  deploy-input-iot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          repository: 'Grupo-5-Projeto/lambdas'
          path: lambdas

      - name: get credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ORG }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ORG }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_ORG }}
          aws-region: ${{ secrets.AWS_REGION_ORG }}

      - name: zip code
        run: |
          ls
          cd lambdas/input-iot-data
          zip -r input.zip .

      - name: upload artifact
        run: |
          cd lambdas/input-iot-data
          ls
          aws s3 cp input.zip s3://${{ vars.BUCKET_RAW }}/artifacts/input.zip

      - name: get object version id
        run: |
          INPUT_VERSION_ID=$(aws s3api head-object \
          --bucket ${{ vars.BUCKET_RAW }} \
          --key artifacts/input.zip \
          --query VersionId \
          --output text)
          echo "INPUT_VERSION_ID=$INPUT_VERSION_ID" >> $GITHUB_ENV

      - name: deploy
        run: |
          cd lambdas/input-iot-data
          aws cloudformation deploy \
          --stack-name input-iot-stack \
          --template-file ./cloudformation.yaml \
          --parameter-overrides LambdaObjectVersionID=${{env.INPUT_VERSION_ID}} S3BucketName=${{vars.BUCKET_RAW}}

  deploy-processor-iot-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          repository: 'Grupo-5-Projeto/lambdas'
          path: lambdas

      - name: get credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ORG }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ORG }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_ORG }}
          aws-region: ${{ secrets.AWS_REGION_ORG }}

      - name: zip code
        run: |
          cd lambdas/process-iot-data
          zip -r process.zip .

      - name: upload artifact
        run: |
          cd lambdas/process-iot-data
          ls
          aws s3 cp process.zip s3://${{ vars.BUCKET_RAW }}/artifacts/process.zip

      - name: get object version id
        run: |
          PROCESS_VERSION_ID=$(aws s3api head-object \
          --bucket ${{ vars.BUCKET_RAW }} \
          --key artifacts/process.zip \
          --query VersionId \
          --output text)
          echo "PROCESS_VERSION_ID=$PROCESS_VERSION_ID" >> $GITHUB_ENV
      
      - name: test
        run: |
          echo ${{env.PROCESS_VERSION_ID}}

      - name: deploy
        run: |
          cd lambdas/process-iot-data
          aws cloudformation deploy \
          --stack-name process-iot-data-stack \
          --template-file ./cloudformation.yaml \
          --parameter-overrides LambdaObjectVersionID=${{env.PROCESS_VERSION_ID}} S3BucketName=${{vars.BUCKET_RAW}}
    