AWSTemplateFormatVersion: 2010-09-09
Parameters:
  S3BucketName:
    Type: string
    Default: "."
  S3ArtifactZipName:
    Type: string
    Default: "input.zip"
  DynamoTableName:
    Type: string
    Default: "SensorIotRawData""

Resources:
  LambdaInputData:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: LambdaInputData
      Runtime: python3.9
      Handler: handler.lambda_handler
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      Timeout: 90
      MemorySize: 502
      Enviroment:
        Variables:
          DYNAMO_TABLE_NAME: !Ref DynamoTableName
      Code:
        S3Bucket: !Ref S3BucketRaw
        S3Key: !Ref S3ArtifactZipName
  
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: "ApiGatewayIoT"
      Parameters:
        endpointConfigurationTypes: REGIONAL
      BinaryMediaTypes:
        - "application/json"

  IoTDataResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: "iot"

  PostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      RestApiId: !Ref RestApi
      ResourceId: !Ref IoTDataResource
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - Region: !Ref "AWS::Region"
            LambdaArn: !GetAtt LambdaInputData.Arn
        PassthroughBehavior: WHEN_NO_MATCH
        Credentials: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: ""
      MethodResponses:
        - StatusCode: 200

  RestApiDeploy:
    Type: AWS::ApiGateway::Deployment
    DependsOn: PostMethod
    Properties:
      RestApiId: !Ref RestApi
      StageName: prod
